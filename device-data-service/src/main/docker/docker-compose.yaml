version: '3.1'

services:
  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    restart: on-failure
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    restart: on-failure
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:${KAFKA_PORT}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  device-data-db:
    image: postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    restart: ${DB_RESTART_TYPE}
    environment:
      POSTGRES_URL: ${DB_URL}
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - ./data:/var/lib/${DB_NAME}
    command: -p ${DB_PORT}

  device-service:
    image: quarkus/data-service-fast-jar
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.fast-jar
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    depends_on:
      - device-data-db
      - kafka
      - zookeeper
